export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const body = JSON.parse(req.body);
    const buttonIndex = body.untrustedData?.buttonIndex || 1;

    const malePredictions = [
      "üíº –°–µ–≥–æ–¥–Ω—è –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π! –í–∞—à–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤–ø–µ—á–∞—Ç–ª–∏—Ç –Ω–∞—á–∞–ª—å—Å—Ç–≤–æ.",
      "üí∞ –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ–±–µ–¥–∞. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –¥–µ—Ç–∞–ª—è–º.",
      "‚ù§Ô∏è –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤—Å—Ç—Ä–µ—á–∞ –≤–µ—á–µ—Ä–æ–º –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤—Å—ë. –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è.",
      "üèÜ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–µ—Å—É—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ.",
      "üöó –ü–æ–µ–∑–¥–∫–∞ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Ç–∫—Ä–æ–µ—Ç –Ω–æ–≤—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã."
    ];

    const femalePredictions = [
      "üíñ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –Ω–∞ –ø–∏–∫–µ! –°–µ–≥–æ–¥–Ω—è –≤–æ–∑–º–æ–∂–Ω–∞ —Å—É–¥—å–±–æ–Ω–æ—Å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞.",
      "‚ú® –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–≤–æ—Ä–∏—Ç—å!",
      "üõçÔ∏è –®–æ–ø–ø–∏–Ω–≥ —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ —É–¥–∞—á–Ω—ã–º - –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –∏—Å–∫–∞–ª–∏.",
      "üíÑ –ù–æ–≤—ã–π –æ–±—Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è –ø—Ä–∏–≤–ª–µ—á–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.",
      "üå∏ –ì–∞—Ä–º–æ–Ω–∏—è –≤ —Å–µ–º—å–µ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö - –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Å–µ—Ä–¥–µ—á–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤."
    ];

    let selectedPrediction;
    let gender;

    if (buttonIndex === 1) {
      gender = "üë® –ú—É–∂—á–∏–Ω–∞";
      selectedPrediction = malePredictions[Math.floor(Math.random() * malePredictions.length)];
    } else {
      gender = "üë© –ñ–µ–Ω—â–∏–Ω–∞";
      selectedPrediction = femalePredictions[Math.floor(Math.random() * femalePredictions.length)];
    }

    const htmlResponse = `
      <!DOCTYPE html>
      <html>
      <head>
          <meta property="fc:frame" content="vNext" />
          <meta property="fc:frame:image" content="https://i.imgur.com/8B3Vx2k.png" />
          <meta property="fc:frame:button:1" content="üîÑ –ù–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ" />
          <meta property="fc:frame:post_url" content="https://YOUR-APP.vercel.app/api/prediction" />
          <meta property="og:image" content="https://i.imgur.com/8B3Vx2k.png" />
      </head>
      <body>
          <div style="display: none;">${selectedPrediction}</div>
      </body>
      </html>
    `;

    res.setHeader('Content-Type', 'text/html');
    res.status(200).send(htmlResponse);

  } catch (error) {
    const fallbackResponse = `
      <!DOCTYPE html>
      <html>
      <head>
          <meta property="fc:frame" content="vNext" />
          <meta property="fc:frame:image" content="https://i.imgur.com/6Q3Vx1j.png" />
          <meta property="fc:frame:button:1" content="üë® –ú—É–∂—á–∏–Ω–∞" />
          <meta property="fc:frame:button:2" content="üë© –ñ–µ–Ω—â–∏–Ω–∞" />
          <meta property="fc:frame:post_url" content="https://YOUR-APP.vercel.app/api/prediction" />
      </head>
      <body></body>
      </html>
    `;
    res.setHeader('Content-Type', 'text/html');
    res.status(200).send(fallbackResponse);
  }
}